[
    {
        "id": "45a5798c969a3877",
        "type": "tab",
        "label": "ML",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c1226307d9cae10d",
        "type": "tab",
        "label": "Telegram",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fb44c4795081b907",
        "type": "tab",
        "label": "Mobile Sensor (Backup)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6dc14b92897e5897",
        "type": "tab",
        "label": "Object Detection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4097a0765b6ad06b",
        "type": "group",
        "z": "fb44c4795081b907",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "05ca7b200d3c2c82",
            "e284037c1b396708",
            "6cce6d88bbcb2297",
            "8ca4b92d9af468a3"
        ],
        "x": 74,
        "y": 571.5,
        "w": 992,
        "h": 97
    },
    {
        "id": "ec0c6b9fefae9c86",
        "type": "group",
        "z": "fb44c4795081b907",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5b07663155ef92c3",
            "d7cec772ba0f11df",
            "8e7cdf522c01d432",
            "c43e5a7a93f552ca",
            "5ad71465182472ad",
            "eaa29e0e2ba58fd2"
        ],
        "x": 74,
        "y": 299,
        "w": 1172,
        "h": 162
    },
    {
        "id": "7f93a9294e905aef",
        "type": "group",
        "z": "fb44c4795081b907",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "81317456c8f0b20d",
            "6b718b5a5fd8e376",
            "2631b75361083c53",
            "62ed66ac7b2efb79"
        ],
        "x": 74,
        "y": 91.5,
        "w": 852,
        "h": 97
    },
    {
        "id": "ead106c74081932d",
        "type": "group",
        "z": "fb44c4795081b907",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "2fd76490d972a42f",
            "c7f87056904b0606",
            "5e43f0fb8ad0b504",
            "5e31f63b2cc0b61d"
        ],
        "x": 94,
        "y": 791.5,
        "w": 452,
        "h": 157
    },
    {
        "id": "113413e69cb96211",
        "type": "group",
        "z": "45a5798c969a3877",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "d6f61006b4207f91",
            "a11c256eeeee1ddc",
            "44dafe7d7123dc28",
            "8cfd42ca200a0bdb",
            "906f4aebf4fa5204",
            "b1c175d43d226828",
            "9ec19e26dcb6a495",
            "e097f98f191fa823",
            "6075681fbf6ef8c8",
            "024a32f0db57aed0",
            "c9062f7b1b679421"
        ],
        "x": 54,
        "y": 79,
        "w": 872,
        "h": 382
    },
    {
        "id": "49d79edfa30ef24d",
        "type": "group",
        "z": "45a5798c969a3877",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "433cb5fb389f8d23",
            "7e43db79ac128262",
            "f37d8272fd895041",
            "abd4ac8da4f33f16",
            "3c8e18c08ac60298",
            "08df7a5148182515",
            "99dfd387980f3974"
        ],
        "x": 54,
        "y": 559,
        "w": 952,
        "h": 202
    },
    {
        "id": "d07a2703c7a0604b",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "72f7db22c25b098f",
        "type": "ui_tab",
        "name": "Tab 1",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "033a3e4e64a4d53a",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "72f7db22c25b098f",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "fb38f2c42c4a82d2",
        "type": "ui_tab",
        "name": "Tab 2",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "f80912a02e0ac3cf",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "fb38f2c42c4a82d2",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "433cb5fb389f8d23",
        "type": "ui_text",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "group": "033a3e4e64a4d53a",
        "order": 0,
        "width": "6",
        "height": "7",
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 890,
        "y": 720,
        "wires": []
    },
    {
        "id": "d6f61006b4207f91",
        "type": "ui_webcam",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "group": "033a3e4e64a4d53a",
        "order": 1,
        "width": 0,
        "height": 5,
        "countdown": false,
        "autoStart": false,
        "hideCaptureButton": false,
        "showImage": "2",
        "mirror": true,
        "format": "png",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "024a32f0db57aed0"
            ]
        ]
    },
    {
        "id": "7e43db79ac128262",
        "type": "function",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "name": "Prepare Img Payload",
        "func": "msg.payload = { \"imageEncoded\": Buffer.from(msg.payload).toString('base64') }\nmsg.headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"}\nmsg.url = \"http://localhost:3003/upload_base64\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 680,
        "wires": [
            [
                "f37d8272fd895041"
            ]
        ]
    },
    {
        "id": "f37d8272fd895041",
        "type": "http request",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 680,
        "wires": [
            [
                "3c8e18c08ac60298",
                "08df7a5148182515"
            ]
        ]
    },
    {
        "id": "abd4ac8da4f33f16",
        "type": "debug",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 640,
        "wires": []
    },
    {
        "id": "3c8e18c08ac60298",
        "type": "function",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "name": "Extract First Class",
        "func": "const obj = JSON.parse(msg.payload)\nmsg.payload = obj.predictions[0].class\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 640,
        "wires": [
            [
                "abd4ac8da4f33f16"
            ]
        ]
    },
    {
        "id": "a11c256eeeee1ddc",
        "type": "ui_button",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "group": "033a3e4e64a4d53a",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Capture",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "6075681fbf6ef8c8"
            ]
        ]
    },
    {
        "id": "44dafe7d7123dc28",
        "type": "inject",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 420,
        "wires": [
            [
                "6075681fbf6ef8c8"
            ]
        ]
    },
    {
        "id": "1ff4a3c939be464d",
        "type": "file in",
        "z": "45a5798c969a3877",
        "name": "",
        "filename": "dog.png",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 320,
        "y": 980,
        "wires": [
            [
                "ac2b96c7f7933dcd"
            ]
        ]
    },
    {
        "id": "ac2b96c7f7933dcd",
        "type": "debug",
        "z": "45a5798c969a3877",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 980,
        "wires": []
    },
    {
        "id": "abf6e7ee86734c61",
        "type": "inject",
        "z": "45a5798c969a3877",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 980,
        "wires": [
            [
                "1ff4a3c939be464d"
            ]
        ]
    },
    {
        "id": "8cfd42ca200a0bdb",
        "type": "jimp-image",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 390,
        "y": 260,
        "wires": [
            [
                "b1c175d43d226828",
                "024a32f0db57aed0"
            ]
        ]
    },
    {
        "id": "906f4aebf4fa5204",
        "type": "inject",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/dog.png",
        "payloadType": "str",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "8cfd42ca200a0bdb"
            ]
        ]
    },
    {
        "id": "b1c175d43d226828",
        "type": "image viewer",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9ec19e26dcb6a495",
        "type": "inject",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/house.jpg",
        "payloadType": "str",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "8cfd42ca200a0bdb"
            ]
        ]
    },
    {
        "id": "e097f98f191fa823",
        "type": "jimp-image",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "width",
        "parameter1Type": "msg",
        "parameter2": "height",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 850,
        "y": 300,
        "wires": [
            [
                "7e43db79ac128262"
            ]
        ]
    },
    {
        "id": "08df7a5148182515",
        "type": "function",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "name": "Format Text",
        "func": "const obj = JSON.parse(msg.payload)\nlet textOut = \"\";\nfor (const pred of obj.predictions) {\n    const classStr = pred.class;\n    const score = pred.score;\n    const scoreP = (score * 100).toFixed(1);\n    textOut += `👉${classStr} (${scoreP}%) <br/>`;\n}\nconst dt = new Date()\nconst datestring = dt.toLocaleDateString();\nconst timestring = dt.toLocaleTimeString();\ntextOut += `<br/>📆${datestring} ⏰${timestring}`;\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 720,
        "wires": [
            [
                "abd4ac8da4f33f16",
                "433cb5fb389f8d23"
            ]
        ]
    },
    {
        "id": "6075681fbf6ef8c8",
        "type": "change",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "Set Capture",
        "rules": [
            {
                "t": "set",
                "p": "capture",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "d6f61006b4207f91"
            ]
        ]
    },
    {
        "id": "024a32f0db57aed0",
        "type": "change",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "Set Width",
        "rules": [
            {
                "t": "set",
                "p": "width",
                "pt": "msg",
                "to": "300",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "height",
                "pt": "msg",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 300,
        "wires": [
            [
                "e097f98f191fa823"
            ]
        ]
    },
    {
        "id": "c9062f7b1b679421",
        "type": "comment",
        "z": "45a5798c969a3877",
        "g": "113413e69cb96211",
        "name": "Input",
        "info": "",
        "x": 150,
        "y": 140,
        "wires": []
    },
    {
        "id": "99dfd387980f3974",
        "type": "comment",
        "z": "45a5798c969a3877",
        "g": "49d79edfa30ef24d",
        "name": "Processing",
        "info": "",
        "x": 160,
        "y": 600,
        "wires": []
    },
    {
        "id": "bbe3784586c6ae67",
        "type": "inject",
        "z": "c1226307d9cae10d",
        "name": "Create JSON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "url",
                "v": "https://api.telegram.org/bot7259382710:AAFF-MNyFO1XSGrDolREQNnXAhXIwS0v2lo/sendMessage",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"chat_id\":\"6094132297\",\"text\":\"Hi\"}",
        "payloadType": "json",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "e1755127ba9d796e"
            ]
        ]
    },
    {
        "id": "45ea2013dc4fd404",
        "type": "debug",
        "z": "c1226307d9cae10d",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "e1755127ba9d796e",
        "type": "http request",
        "z": "c1226307d9cae10d",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "45ea2013dc4fd404"
            ]
        ]
    },
    {
        "id": "0f615744dbe14112",
        "type": "function",
        "z": "c1226307d9cae10d",
        "name": "Gen Random Number",
        "func": "msg.payload = Math.random()\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 300,
        "wires": [
            [
                "da75ca486005b5c0"
            ]
        ]
    },
    {
        "id": "de1063fb2e1fa793",
        "type": "function",
        "z": "c1226307d9cae10d",
        "name": "Construct JSON",
        "func": "// Input your info here\nconst TOKEN = \"7259382710:AAFF-MNyFO1XSGrDolREQNnXAhXIwS0v2lo\"\nconst CHAT_ID = \"6094132297\"\n\n// Store incoming message\nconst value = msg.payload\n\n// Construct \"JSON\"\nmsg.payload = {\n    chat_id: CHAT_ID,\n    text: value\n}\nmsg.url = `https://api.telegram.org/bot${TOKEN}/sendMessage`\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 440,
        "wires": [
            [
                "ceb858e7fb5e74e3"
            ]
        ]
    },
    {
        "id": "411ffb12a7ed214e",
        "type": "inject",
        "z": "c1226307d9cae10d",
        "name": "Constant Inject",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 300,
        "wires": [
            [
                "0f615744dbe14112"
            ]
        ]
    },
    {
        "id": "da75ca486005b5c0",
        "type": "template",
        "z": "c1226307d9cae10d",
        "name": "Format Message",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "de1063fb2e1fa793"
            ]
        ]
    },
    {
        "id": "ceb858e7fb5e74e3",
        "type": "http request",
        "z": "c1226307d9cae10d",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 440,
        "wires": [
            [
                "91c8cfaee8667a30"
            ]
        ]
    },
    {
        "id": "91c8cfaee8667a30",
        "type": "debug",
        "z": "c1226307d9cae10d",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 440,
        "wires": []
    },
    {
        "id": "b5d2913741b1655f",
        "type": "comment",
        "z": "c1226307d9cae10d",
        "name": "Manual",
        "info": "",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "37539f8df9f4303a",
        "type": "comment",
        "z": "c1226307d9cae10d",
        "name": "Data from sensor",
        "info": "",
        "x": 180,
        "y": 240,
        "wires": []
    },
    {
        "id": "5b07663155ef92c3",
        "type": "exec",
        "z": "fb44c4795081b907",
        "g": "ec0c6b9fefae9c86",
        "command": "termux-sensor -a",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 380,
        "wires": [
            [
                "eaa29e0e2ba58fd2"
            ],
            [],
            []
        ]
    },
    {
        "id": "d7cec772ba0f11df",
        "type": "inject",
        "z": "fb44c4795081b907",
        "g": "ec0c6b9fefae9c86",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "5b07663155ef92c3"
            ]
        ]
    },
    {
        "id": "8e7cdf522c01d432",
        "type": "debug",
        "z": "fb44c4795081b907",
        "g": "ec0c6b9fefae9c86",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 380,
        "wires": []
    },
    {
        "id": "05ca7b200d3c2c82",
        "type": "exec",
        "z": "fb44c4795081b907",
        "g": "4097a0765b6ad06b",
        "command": "pkill termux",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 620,
        "wires": [
            [
                "e284037c1b396708"
            ],
            [],
            []
        ]
    },
    {
        "id": "e284037c1b396708",
        "type": "exec",
        "z": "fb44c4795081b907",
        "g": "4097a0765b6ad06b",
        "command": "termux-sensor -c",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "8ca4b92d9af468a3"
            ],
            [
                "8ca4b92d9af468a3"
            ],
            [
                "8ca4b92d9af468a3"
            ]
        ]
    },
    {
        "id": "6cce6d88bbcb2297",
        "type": "inject",
        "z": "fb44c4795081b907",
        "g": "4097a0765b6ad06b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 620,
        "wires": [
            [
                "05ca7b200d3c2c82"
            ]
        ]
    },
    {
        "id": "8ca4b92d9af468a3",
        "type": "debug",
        "z": "fb44c4795081b907",
        "g": "4097a0765b6ad06b",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 620,
        "wires": []
    },
    {
        "id": "c43e5a7a93f552ca",
        "type": "function",
        "z": "fb44c4795081b907",
        "g": "ec0c6b9fefae9c86",
        "name": "Acceleration",
        "func": "const sensor_name = \"LSM6DSO Acceleration Sensor\"\nconst payload = msg.payload\nconst values = payload[sensor_name].values\nconst output_value = Math.sqrt( values[0]**2 + values[1]**2 + values[2]**2)\nmsg.payload = output_value\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 340,
        "wires": [
            [
                "8e7cdf522c01d432"
            ]
        ]
    },
    {
        "id": "81317456c8f0b20d",
        "type": "exec",
        "z": "fb44c4795081b907",
        "g": "7f93a9294e905aef",
        "command": "termux-sensor -l",
        "addpay": "",
        "append": "",
        "useSpawn": "true",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 420,
        "y": 140,
        "wires": [
            [
                "62ed66ac7b2efb79"
            ],
            [],
            []
        ]
    },
    {
        "id": "6b718b5a5fd8e376",
        "type": "debug",
        "z": "fb44c4795081b907",
        "g": "7f93a9294e905aef",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 140,
        "wires": []
    },
    {
        "id": "2631b75361083c53",
        "type": "inject",
        "z": "fb44c4795081b907",
        "g": "7f93a9294e905aef",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "81317456c8f0b20d"
            ]
        ]
    },
    {
        "id": "62ed66ac7b2efb79",
        "type": "json",
        "z": "fb44c4795081b907",
        "g": "7f93a9294e905aef",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 140,
        "wires": [
            [
                "6b718b5a5fd8e376"
            ]
        ]
    },
    {
        "id": "5ad71465182472ad",
        "type": "function",
        "z": "fb44c4795081b907",
        "g": "ec0c6b9fefae9c86",
        "name": "Lux",
        "func": "const sensor_name = \"TMD4910 Uncalibrated lux Sensor\" // Change here\nconst payload = msg.payload\nconst values = payload[sensor_name].values\nconst output = values[0] // Modify here\nmsg.payload = output\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 420,
        "wires": [
            [
                "8e7cdf522c01d432"
            ]
        ]
    },
    {
        "id": "eaa29e0e2ba58fd2",
        "type": "json",
        "z": "fb44c4795081b907",
        "g": "ec0c6b9fefae9c86",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "c43e5a7a93f552ca",
                "5ad71465182472ad"
            ]
        ]
    },
    {
        "id": "594164d5c9b1d05f",
        "type": "comment",
        "z": "fb44c4795081b907",
        "name": "Inspect Sensors",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "de11ce4e9986c57a",
        "type": "comment",
        "z": "fb44c4795081b907",
        "name": "Get Sensor Values",
        "info": "",
        "x": 170,
        "y": 260,
        "wires": []
    },
    {
        "id": "22c9026735a164f5",
        "type": "comment",
        "z": "fb44c4795081b907",
        "name": "Stop/Reset Sensors",
        "info": "",
        "x": 170,
        "y": 540,
        "wires": []
    },
    {
        "id": "2fd76490d972a42f",
        "type": "inject",
        "z": "fb44c4795081b907",
        "g": "ead106c74081932d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 840,
        "wires": [
            [
                "c7f87056904b0606"
            ]
        ]
    },
    {
        "id": "c7f87056904b0606",
        "type": "exec",
        "z": "fb44c4795081b907",
        "g": "ead106c74081932d",
        "command": "termux-torch on",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 840,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5e43f0fb8ad0b504",
        "type": "exec",
        "z": "fb44c4795081b907",
        "g": "ead106c74081932d",
        "command": "termux-torch off",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 900,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "5e31f63b2cc0b61d",
        "type": "inject",
        "z": "fb44c4795081b907",
        "g": "ead106c74081932d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 900,
        "wires": [
            [
                "5e43f0fb8ad0b504"
            ]
        ]
    },
    {
        "id": "62947d108e266e5b",
        "type": "comment",
        "z": "fb44c4795081b907",
        "name": "Stop/Reset Sensors",
        "info": "",
        "x": 190,
        "y": 760,
        "wires": []
    },
    {
        "id": "4a0032481b5bf988",
        "type": "inject",
        "z": "6dc14b92897e5897",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/dog.png",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "db6e879f45a40da1"
            ]
        ]
    },
    {
        "id": "db6e879f45a40da1",
        "type": "jimp-image",
        "z": "6dc14b92897e5897",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "",
        "parameter1Type": "msg",
        "parameter2": "",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 0,
        "jimpFunction": "none",
        "selectedJimpFunction": {
            "name": "none",
            "fn": "none",
            "description": "Just loads the image.",
            "parameters": []
        },
        "x": 390,
        "y": 100,
        "wires": [
            [
                "143c48862cda110d"
            ]
        ]
    },
    {
        "id": "f5db6ec1d4d4e6a8",
        "type": "image viewer",
        "z": "6dc14b92897e5897",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "active": true,
        "x": 750,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f8f2cdbf29afc90f",
        "type": "jimp-image",
        "z": "6dc14b92897e5897",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "ret": "buf",
        "parameter1": "width",
        "parameter1Type": "msg",
        "parameter2": "height",
        "parameter2Type": "msg",
        "parameter3": "",
        "parameter3Type": "msg",
        "parameter4": "",
        "parameter4Type": "msg",
        "parameter5": "",
        "parameter5Type": "msg",
        "parameter6": "",
        "parameter6Type": "msg",
        "parameter7": "",
        "parameter7Type": "msg",
        "parameter8": "",
        "parameter8Type": "msg",
        "sendProperty": "payload",
        "sendPropertyType": "msg",
        "parameterCount": 3,
        "jimpFunction": "resize",
        "selectedJimpFunction": {
            "name": "resize",
            "fn": "resize",
            "description": "resize the image. One of the w or h parameters can be set to automatic (\"Jimp.AUTO\" or -1).",
            "parameters": [
                {
                    "name": "w",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the width to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "h",
                    "type": "num|auto",
                    "required": true,
                    "hint": "the height to resize the image to (or \"Jimp.AUTO\" or -1)"
                },
                {
                    "name": "mode",
                    "type": "resizeMode",
                    "required": false,
                    "hint": "a scaling method (e.g. Jimp.RESIZE_BEZIER)"
                }
            ]
        },
        "x": 770,
        "y": 260,
        "wires": [
            [
                "1b08605b4d22afc3",
                "f5db6ec1d4d4e6a8"
            ]
        ]
    },
    {
        "id": "316838a928b8f35a",
        "type": "http request",
        "z": "6dc14b92897e5897",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 130,
        "y": 440,
        "wires": [
            [
                "09a9529bf64b6abb",
                "3a85670e36279ac9",
                "6e3a93b6e5c66f8e"
            ]
        ]
    },
    {
        "id": "1b08605b4d22afc3",
        "type": "function",
        "z": "6dc14b92897e5897",
        "name": "function 1",
        "func": "msg.payload = { \"imageEncoded\": Buffer.from(msg.payload).toString('base64') }\nmsg.headers = { \"Content-Type\": \"application/x-www-form-urlencoded\" }\nmsg.url = \"http://localhost:3004/upload_base64\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 340,
        "wires": [
            [
                "316838a928b8f35a"
            ]
        ]
    },
    {
        "id": "09a9529bf64b6abb",
        "type": "debug",
        "z": "6dc14b92897e5897",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 320,
        "wires": []
    },
    {
        "id": "3a85670e36279ac9",
        "type": "function",
        "z": "6dc14b92897e5897",
        "name": "function 2",
        "func": "const obj = JSON.parse(msg.payload)\nlet textOut = \"\";\nfor (const pred of obj.counts) {\n    const classStr = pred.class;\n    const count = pred.count;\n    textOut += `👉${classStr} (X${count}) <br/>`;\n}\nif (!textOut) textOut = \"No Detection <br/>\"\nconst dt = new Date()\nconst datestring = dt.toLocaleDateString();\nconst timestring = dt.toLocaleTimeString();\ntextOut += `<br/>📆${datestring} ⏰${timestring}`;\nmsg.payload = textOut;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 400,
        "wires": [
            [
                "0c97d547e7e69ee5"
            ]
        ]
    },
    {
        "id": "0c97d547e7e69ee5",
        "type": "ui_text",
        "z": "6dc14b92897e5897",
        "group": "f80912a02e0ac3cf",
        "order": 0,
        "width": "6",
        "height": "5",
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 440,
        "wires": []
    },
    {
        "id": "b8bcd7b484afd86e",
        "type": "ui_template",
        "z": "6dc14b92897e5897",
        "group": "f80912a02e0ac3cf",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "6e3a93b6e5c66f8e",
        "type": "function",
        "z": "6dc14b92897e5897",
        "name": "function 3",
        "func": "const obj = JSON.parse(msg.payload)\nconst imageURL = obj.imageURL\nconst html = `<img width=\"300px\" src=\"${imageURL}\" />`\nmsg.payload = html\nconsole.log(html)\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 520,
        "wires": [
            [
                "b8bcd7b484afd86e"
            ]
        ]
    },
    {
        "id": "143c48862cda110d",
        "type": "change",
        "z": "6dc14b92897e5897",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "width",
                "pt": "msg",
                "to": "300",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "height",
                "pt": "msg",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 240,
        "wires": [
            [
                "f8f2cdbf29afc90f"
            ]
        ]
    },
    {
        "id": "94e2ab5e320c4cb7",
        "type": "inject",
        "z": "6dc14b92897e5897",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "img/house.jpg",
        "payloadType": "str",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "db6e879f45a40da1"
            ]
        ]
    },
    {
        "id": "16cb46aa241b6ddb",
        "type": "inject",
        "z": "6dc14b92897e5897",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "6e3a93b6e5c66f8e"
            ]
        ]
    },
    {
        "id": "7df2a0db3e863804",
        "type": "ui_webcam",
        "z": "6dc14b92897e5897",
        "name": "",
        "group": "f80912a02e0ac3cf",
        "order": 2,
        "width": 0,
        "height": 5,
        "countdown": false,
        "autoStart": false,
        "hideCaptureButton": false,
        "showImage": "2",
        "mirror": true,
        "format": "png",
        "x": 260,
        "y": 240,
        "wires": [
            [
                "db6e879f45a40da1"
            ]
        ]
    },
    {
        "id": "68c04bd675856d00",
        "type": "ui_button",
        "z": "6dc14b92897e5897",
        "name": "",
        "group": "f80912a02e0ac3cf",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 50,
        "y": 280,
        "wires": [
            [
                "bf9dedb46f2b33d7"
            ]
        ]
    },
    {
        "id": "bf9dedb46f2b33d7",
        "type": "change",
        "z": "6dc14b92897e5897",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "capture",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 300,
        "wires": [
            [
                "7df2a0db3e863804"
            ]
        ]
    }
]